class Solution {
       public List<String> invalidTransactions(String[] transactions) {
        List<String> lst = new ArrayList<>();

        int n = transactions.length;

        if (n == 0) return lst;
        String[] name = new String[n];
        int[] time = new int[n];
        int[] money = new int[n];
        String[] city = new String[n];
        boolean[] add = new boolean[n];

        for(int i = 0 ; i < transactions.length ;i++)    {
            String[] list = transactions[i].split(",");
            name[i] = list[0];
                   time[i] = Integer.parseInt(list[1]);
            money[i] = Integer.parseInt(list[2]);
            city[i] = list[3];
        }
        for(int i = 0 ; i < transactions.length ;i++) {
            if(money[i] > 1000) {
                add[i] = true;
            }
            for (int j = i + 1; j < n; j++)
            {
                // if (mp.count(j))
                //     continue;
                if (name[i].equals(name[j]) &&
                !city[i].equals(city[j]) &&
                    (Math.abs(time[i] - time[j]) <= 60))
                {
                    add[i] = true;
                    add[j] = true;
                }
            }
        }

        for(int i = 0 ; i < n ;i++) {
            if(add[i]) {
                lst.add(transactions[i]);
            }
        }

        return lst;

    }


}
